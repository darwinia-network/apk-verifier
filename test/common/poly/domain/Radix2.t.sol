// SPDX-License-Identifier: MIT
pragma solidity ^0.8.17;

import "forge-std/Test.sol";
import "../../../../src/common/poly/domain/Radix2.sol";

contract Radix2Test is Test {
    using Radix2 for Radix2EvaluationDomain;

    function test_serialize() public {
        Radix2EvaluationDomain memory domain = Radix2.init();
        bytes memory d = domain.serialize();
        bytes memory e = domain_serialize_compressed();
        assertEq(d, e);
    }

    function domain_serialize_compressed() internal pure returns (bytes memory) {
        return
        hex"0001000000000000080000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000040b783840000d0ebe651f416b83e4f8acd6ed48f7b1ef40d19b708dff1a734acbaca74dbd94badd10b8cac01043fe3dca2842bb41cb9b00d23140c7ac8f8d9880c1ad1ae01c584d4c06b2d7133763ffae5a1ac50d0340fb9292f0001c5934edd0aea02a004874507e8450ab42a5fa6baeae39eee878a3b8f9e4ffaefbafeb5959738e0b6631c7581de413c00010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    }
}
