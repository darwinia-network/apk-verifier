// SPDX-License-Identifier: MIT
pragma solidity ^0.8.17;

import "forge-std/Test.sol";
import "../../../src/common/bls12377/G2.sol";

contract BLS12G2AffineTest is Test {
    using BLS12G2Affine for bytes;
    using BLS12G2Affine for Bls12G2;
    using BLS12G2Affine for Bls12Fp2;

    // R: (QuadExtField(11557587920523491141644419707107701825369829189735996211224349772154031241646267060786257002785197434537196170844 + 98424027675223431337107965539915101552446204639976823374383108542028444907490923811542789977514989253907795276305 * u), QuadExtField(67488721414241249285583087059813421705477241251154159487323814878342587865316881194694651923749679362160030981714 + 11869671823870902068247566609450987730043725897504844254681642638329926836997139786821777457585828654511868406877 * u))
    // message: (QuadExtField(148559756097373686737473185546634605651836620619553370419642281562573944979516414531862360535007796105384622529445 + 257295978715975890957093645446596852740932332982897702694053034596074614470566638792747039294763092496091809660289 * u), QuadExtField(154528904946852905002523758203950554937459549792855045971865407021850644446847848910614418504744512323570932099378 + 96767526410601131067379771325144930702876408154556793229798642897495617722437726664585764504265437281805063753073 * u))

    function test_map_to_curve() public {
        Bls12Fp2 memory u0 = Bls12Fp2(
            Bls12Fp(
                0xc2471314bdab70cff1124e4828405a, 0x0847fee471e10c210bdde1f4d04b5636bad67debba2a8c871fa0ef1dc67cf295
            ),
            Bls12Fp(
                0xdf10f31739560f1df3e1aa677c0050, 0xcd7bd81a2cdd42a39c760829d635ea688a38ec1af60b4638f297f33a81300813
            )
        );
        Bls12Fp2 memory u1 = Bls12Fp2(
            Bls12Fp(
                0x9abfbbb83f6959e6746c018b7e0ccb, 0xbb37a13465997d07aa7912a38d88b9074581f84a25668cc46732b2bea7cbb165
            ),
            Bls12Fp(
                0x178a64087c014cec9a650a0da435424, 0xbfa7931ba99c81fcf16511b8bf1915adc1fd02c28c07312d3afc3a70508f6bb8
            )
        );
        Bls12G2 memory q0 = u0.map_to_curve();
        Bls12G2 memory q1 = u1.map_to_curve();
        assertEq(
            hex"000000000000000000000000000000000029324b1b9635a6fa8cf0255796f34d89421cbbab68f1253a57b08208eb4ef7e4af2b770bf3d5b780f2398ece288ae8000000000000000000000000000000000179f1725d3a26d8e7a5bb7bf5f10df371cf209f643008464c0154a23a37467ccee023973cb90e240e0a2d750d3f771500000000000000000000000000000000018c32f41ffa343941b756ff47060562653726e31e763b4240c61c8df1cbfcfe2ab3a4f72ae2290ee84e9efc10ebf276000000000000000000000000000000000021797f583e2682aa7d70571c91bf8e070056ae07b3702f9c65818f434975343d8633a3725c21477bcae2061a1f4935",
            q0.debug()
        );
        assertEq(
            hex"00000000000000000000000000000000010f7512f9ac1a1483f7e0ed2b3554569bf34bd13e69cbce48598822fe13369c3706085b69c34b67f4a5b338238b40700000000000000000000000000000000000080d64f29b47f824a0ed46bae71b53dd227fc8101b3641080531b5a62bc21200fa561015f267e557e074bd35f44e0f0000000000000000000000000000000000f453c2db9ceb6a99a0cfc2e1df0f3d9c019a567a4353f3ccb917d04c18409571fac3c190c8c37cb84fde0a132f5ca70000000000000000000000000000000000d08c0f5c66435eb2e01d1e331611dff0b8c5212e2246c6cab0214ecdf153fa54f55595de0ee976aae96f947945a132",
            q1.debug()
        );
    }

    function test_add() public {
        Bls12Fp2 memory u0 = Bls12Fp2(
            Bls12Fp(
                0xc2471314bdab70cff1124e4828405a, 0x0847fee471e10c210bdde1f4d04b5636bad67debba2a8c871fa0ef1dc67cf295
            ),
            Bls12Fp(
                0xdf10f31739560f1df3e1aa677c0050, 0xcd7bd81a2cdd42a39c760829d635ea688a38ec1af60b4638f297f33a81300813
            )
        );
        Bls12Fp2 memory u1 = Bls12Fp2(
            Bls12Fp(
                0x9abfbbb83f6959e6746c018b7e0ccb, 0xbb37a13465997d07aa7912a38d88b9074581f84a25668cc46732b2bea7cbb165
            ),
            Bls12Fp(
                0x178a64087c014cec9a650a0da435424, 0xbfa7931ba99c81fcf16511b8bf1915adc1fd02c28c07312d3afc3a70508f6bb8
            )
        );
        Bls12G2 memory q0 = u0.map_to_curve();
        Bls12G2 memory q1 = u1.map_to_curve();
        Bls12G2 memory r = q0.add(q1);
        assertEq(
            hex"000000000000000000000000000000000013392cad6d777c47c7b147a3b529e8d65242fa8628bf85d7ba808b43dfacf93b53633b16475f9f66f4dede57dcae5c0000000000000000000000000000000000a3b48e4339fce7bf23e019c329125549e6b8faf6d8c561155108441869afb8b69f35754692ac99aaae75a7f335f211000000000000000000000000000000000070406d31f4ffb391d4f789666c2354ead5856a7f07d49b2b27bdac1413daf8d66d5fd310081a29cf2e30e743f11e52000000000000000000000000000000000013be0f000464ae31b6ad1f6ba088832eaa66b7e631e619df847844f27af640f76a0fc248b36c30ef84232f7d94ec5d",
            r.debug()
        );
    }

    function test_hash_to_curve() public {
        bytes memory m =
            hex"a1f80482fcc0bebe31ecdac01f571644c85d2623a5db8878ea4609274a49cf77ff221e0cacde36b8230677ba75a2e74ebbed22434d7673c1a1235c15c3ca342195dc79f09fb2e88c60411849ebf821581eeda074f130576a80c99aa24f21170078dc755346c371efac85aec926ff78ddb70d261bbd867d647b54cf9f55a9221fee32a62bd06a23b30c1d6be94b4cf8506fcdb0056835d9569878001f69e828135d2003acf08d360b682293770c3d493e1f67ac590328e10752675b804c6db20008000000";
        Bls12G2 memory p = m.hash_to_curve();
        bytes memory e =
            hex"0000000000000000000000000000000000f71825c48d6d1c890f6a4f8703ce5a1ba5097cc2983e8cd21437a3dbc271d9ac20b9a0fa42ed983c8f771d4a4f9ba50000000000000000000000000000000001abf3982d02f4d9ad8b129666ea3b9d7845a8f0b23be01f2bf071499a56b3952ea5ed8ef8993886526ca554a9393d8100000000000000000000000000000000010105c981e730102823c96c118f5b93daec82a03158ab549a8acd187e1fdf7928a986f73db678626a647a145f17a9320000000000000000000000000000000000a0f3396068929d03cb77c7c0e92cd9c0dfbcac8a6384eb0e482b3eca6865a3b968839750d49564310e0c9f57150d71";

        console.logBytes(e);
        console.logBytes(p.debug());

        assertEq(e, p.debug());
    }
}
